name: PR-Checks

on: 
  pull_request:
    branches: [main]

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: 'Install dependecies'
        run: yarn

      - name: 'Lint code base'
        run: yarn lint

      - name: 'Run tests over monorepo'
        run: yarn test

      - name: 'Build packages'
        run: yarn build

      - name: 'Build docker image'
        run: yarn docker:build-staging

  # deploy:
  #   runs-on: ubuntu-latest
  #   # needs: pr-checks

  #   steps:
  #     - name: Extract branch name
  #       shell: bash
  #       run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
  #       id: extract_branch

  #     - name: Deploy to VPS (prod) via SSH action
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: ${{ secrets.VPS_USERNAME }}
  #         password: ${{ secrets.VPS_PASSWORD }}
  #         port: 22
  #         script: |
  #           mkdir SQRIB-STAGING -p
  #           cd SQRIB-STAGING
  #           docker compose --file docker-compose.staging.yml stop
  #           docker compose --file docker-compose.staging.yml rm -f
  #           git fetch
  #           git checkout ci/create-workflow-for-deployment
  #           git pull origin ci/create-workflow-for-deployment
  #           docker compose --file docker-compose.staging.yml up -d

          # UNCOMMENT ONCE PR REVIEW IS READY TO BE SET UP
          # script: |
          #   mkdir ${{ steps.extract_branch.outputs.branch }} -p
          #   cd ${{ steps.extract_branch.outputs.branch }}
          #   git clone ${{ secrets.REPO_ADRESS }} . --branch ${{ steps.extract_branch.outputs.branch }}
          #   git fetch
          #   git pull origin ${{ steps.extract_branch.outputs.branch }}
          #   docker compose --file docker-compose.staging.yml stop
          #   docker compose --file docker-compose.staging.yml rm -f
          #   docker compose --file docker-compose.staging.yml up -d